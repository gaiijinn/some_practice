services:
  web-app:
    build:
      context: .
    ports:
      - '8000:8000'
    volumes:
      - ./learn_service:/service
    environment:
      - DB_HOST=database
      - DB_NAME=dbservice
      - DB_USER=admin
      - DB_PASSWORD=admin
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    command: >
       sh -c "python manage.py runserver 0.0.0.0:8000"

    depends_on:
      - database

  database:
    image: postgres:14.6-alpine
    environment:
      - POSTGRES_DB=dbservice
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=admin

  redis:
    image: redis:7.0.5-alpine
    hostname: redis
    ports:
       - '6379:6379'

  worker:
    build:
      context: .
    hostname: worker
    entrypoint: celery
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - DB_HOST=database
      - DB_NAME=dbservice
      - DB_USER=admin
      - DB_PASSWORD=admin
    command: -A service worker -l info
    volumes:
      - ./learn_service:/service
    links:
      - database
      - redis
    depends_on:
      - redis
      - database

  worker2:
    build:
      context: .
    hostname: worker2
    entrypoint: celery
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - DB_HOST=database
      - DB_NAME=dbservice
      - DB_USER=admin
      - DB_PASSWORD=admin
    command: -A service worker -l info
    volumes:
      - ./learn_service:/service
    links:
      - database
      - redis
    depends_on:
      - redis
      - database

  flower:
    build:
      context: .
    hostname: flower
    entrypoint: celery
    command: -A service flower
    volumes:
      - ./learn_service:/service
    links:
      - redis
    depends_on:
      - worker
      - worker2
      - redis
    environment:
      - CELERY_BROKER_URL=redis://redis:6379
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    ports:
      - '5555:5555'
